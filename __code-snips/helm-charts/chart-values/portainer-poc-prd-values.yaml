replicaCount: 1
enterpriseEdition: 
  enabled: false
  image:
    repository: portainer/portainer-ee
    tag: 2.0.0
    pullPolicy: IfNotPresent

image:
  repository: portainer/portainer-ce
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []

serviceAccount:
  annotations: {}
  name: portainer-sa-clusteradmin

service:
  type: NodePort
  httpPort: 9000
  httpNodePort: 30777
  edgePort: 8000
  edgeNodePort: 30776
  annotations: {}
    

ingress:
  enabled: true
  annotations: 
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
    alb.ingress.kubernetes.io/certificate-arn: 	arn:aws:acm:us-west-2:????:certificate/????
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/scheme: internal
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/success-codes: 200-499
    alb.ingress.kubernetes.io/security-groups: sg-06ae2e882fce41fb9
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /api/status
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '60'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '50'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '10'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/tags: Environment=prod,Team=test,Name=k8s-visual-inspector,app=k8s-visual-inspector
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60,load_balancing.algorithm.type=least_outstanding_requests,deregistration_delay.timeout_seconds=10
    external-dns.alpha.kubernetes.io/hostname: portainer-poc.backops.????.com

  tls: []

resources: {}

persistence:
  size: "20Gi"
  annotations: {}
  storageClass: "ebs-sc"